name: PostgreSQL tests
on: [ push ]

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  Test-postgres-integration:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c8454efe5d0bdefd25384362fe217428ca277d57
        with:
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            codecov.io:443
            github.com:443
            go.dev:443
            golang.org:443
            proxy.golang.org:443
            storage.googleapis.com:443
            uploader.codecov.io:443

      - name: Check out repository code
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3

      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568
        with:
          go-version: 1.16

      - name: Build
        run: go build -v ./...

      - name: Test
        env:
          LIBSCHEMA_POSTGRES_TEST_DSN: "postgres://postgres:postgres@localhost?sslmode=disable"
        run: go test ./lspostgres/... -v

      - name: Run Coverage
        env:
          LIBSCHEMA_POSTGRES_TEST_DSN: "postgres://postgres:postgres@localhost?sslmode=disable"
        run: go test -coverprofile=coverage.txt -covermode=atomic -coverpkg=github.com/muir/libschema/... ./lspostgres/... 

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@40a12dcee2df644d47232dde008099a3e9e4f865
        with:
          verbose: true
          flags: pg_tests
          fail_ci_if_error: true
